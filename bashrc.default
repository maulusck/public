# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

export PATH=~/.local/bin:/snap/bin:/usr/sandbox/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/usr/share/games:/usr/local/sbin:/usr/sbin:/sbin:$PATH

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	    color_prompt=yes
    else
	    color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1="\[\033[0;34m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;34m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;34m\]\h'; else echo '\[\033[0;97m\]\u\[\033[01;33m\]@\[\033[01;34m\]\h'; fi)\[\033[0;34m\]]\342\224\200[\[\033[0;36m\]\w\[\033[0;34m\]]\n\[\033[0;34m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
else
    PS1='┌──[\u@\h]─[\w]\n└──╼ \$ '
fi

# Set 'man' colors
if [ "$color_prompt" = yes ]; then
	man() {
	env \
	LESS_TERMCAP_mb=$'\e[01;31m' \
	LESS_TERMCAP_md=$'\e[01;31m' \
	LESS_TERMCAP_me=$'\e[0m' \
	LESS_TERMCAP_se=$'\e[0m' \
	LESS_TERMCAP_so=$'\e[01;44;33m' \
	LESS_TERMCAP_ue=$'\e[0m' \
	LESS_TERMCAP_us=$'\e[01;32m' \
	man "$@"
	}
fi

unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\033[0;34m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;34m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;34m\]\h'; else echo '\[\033[0;97m\]\u\[\033[01;33m\]@\[\033[01;34m\]\h'; fi)\[\033[0;34m\]]\342\224\200[\[\033[0;36m\]\w\[\033[0;34m\]]\n\[\033[0;34m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -lh'
alias la='ls -lha'
alias l='ls -CF'
alias em='emacs -nw'
alias dd='dd status=progress'
alias _='sudo'
alias _i='sudo -i'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# CUSTOM ALIASES

alias rm='rm -i'
alias ls..='ls ..'
alias cd..='cd ..'
alias cd-='cd -'
alias q='exit'
alias off='poweroff'
alias cl='clear'
alias aliases='nano ~/.bashrc'
alias amirror='scrcpy  --window-height 760 --window-width 329 --window-x 1366 --window-title SCRCPY --shortcut-mod rctrl & exit'
alias please='sudo'
alias fucking='sudo'
# source ssh aliases
source ~/.ssh/aliases
alias duck='firefox --search $1 & exit'
alias parrot-upgrade='sudo parrot-upgrade'
alias routine='sudo apt update && sudo apt full-upgrade && sudo apt autoremove && sudo apt update && sudo apt full-upgrade -y && sudo apt autoremove -y && sudo apt autoclean && sudo apt clean'
alias aptrm='sudo apt autoremove'
alias openvpn-connect-home='sudo openvpn --config ~/.ovpn/home.ovpn'
alias vpnbook='cd ~/.ovpn/vpnbook/ && printf "Password is: " && cat pw-vpnbook'
alias cmus='cd ~/Music && cmus && cd -'
alias change-dns-opendns='sudo cp -v /etc/resolv.conf.od /etc/resolv.conf && echo "New nameservers:" && cat /etc/resolv.conf | grep -w nameserver'
alias change-dns-cloudflare='sudo cp -v /etc/resolv.conf.cf /etc/resolv.conf && echo "New nameservers:" && cat /etc/resolv.conf | grep -w nameserver'
alias change-dns-pihole='sudo cp -v /etc/resolv.conf.ph /etc/resolv.conf && echo "New nameservers:" && cat /etc/resolv.conf | grep -w nameserver'
alias timer='stopwatch & exit'
alias qemu64='qemu-system-x86_64'
alias ipa='ip a'
alias ipr='ip r'
# loop things
function loop(){
	while true; do ($2 && sleep $1 && clear) done
}
export -f loop
# services
alias svall='sudo service --status-all'
